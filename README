NAME
    Map::Tube::SaintPetersburg - Interface to the Saint Petersburg Metro
    Map.

SYNOPSIS
     use Map::Tube::SaintPetersburg;
     my $obj = Map::Tube::SaintPetersburg->new;
     my $routes_ar = $obj->get_all_routes($from, $to);
     my $lines_ar = $obj->get_lines;
     my $station = $obj->get_node_by_id($station_id);
     my $station = $obj->get_node_by_name($station_name);
     my $route = $obj->get_shortest_route($from, $to);
     my $stations_ar = $obj->get_stations($line);
     my $metro_name = $obj->name;
     my $xml_file = $obj->xml;

DESCRIPTION
    It currently provides functionality to find the shortest route between
    the two given nodes.

    For more information about Saint Petersburg Map, click here
    <https://en.wikipedia.org/wiki/Saint_Petersburg_Metro>.

METHODS
    "new()"
             Constructor.

    "get_all_routes($from, $to)" [EXPERIMENTAL]
             Get all routes from station to station.
             Returns reference to array with Map::Tube::Route objects.

    "get_lines()"
             Get lines in metro map.
             Returns reference to array with Map::Tube::Line objects.

    "get_node_by_id($station_id)"
             Get station node by id.
             Returns Map::Tube::Node object.

    "get_node_by_name($station_name)"
             Get station node by name.
             Returns Map::Tube::Node object.

    "get_shortest_route($from, $to)"
             Get shortest route between $from and $to node names. Node names in $from and $to are case insensitive.
             Returns Map::Tube::Route object.

    "get_stations($line)"
             Get list of stations for concrete metro line.
             Returns reference to array with Map::Tube::Node objects.

    "name()"
             Get metro name.
             Returns string with metro name.

    "xml()"
             Get XML specification of Saint Petersburg metro.
             Returns string with XML.

EXAMPLE1
     # Pragmas.
     use strict;
     use warnings;

     # Modules.
     use Encode qw(decode_utf8 encode_utf8);
     use Map::Tube::SaintPetersburg;

     # Object.
     my $obj = Map::Tube::SaintPetersburg->new;

     # Get route.
     my $route = $obj->get_shortest_route(decode_utf8('Лесная'), decode_utf8('Озерки'));

     # Print out type.
     print "Route: ".encode_utf8($route)."\n";

     # Output:
     # Route: Лесная (Кировско-Выборгская линия), Выборгская (Кировско-Выборгская линия), Площадь Ленина (Кировско-Выборгская линия), Чернышевская (Кировско-Выборгская линия), Площадь Восстания (Кировско-Выборгская линия), Владимирская (Кировско-Выборгская линия), Пушкинская (Кировско-Выборгская линия), Технологический институт (Кировско-Выборгская линия,Московско-Петроградская линия), Сенная площадь (Московско-Петроградская линия), Невский проспект (Московско-Петроградская линия), Горьковская (Московско-Петроградская линия), Петроградская (Московско-Петроградская линия), Чёрная речка (Московско-Петроградская линия), Пионерская (Московско-Петроградская линия), Удельная (Московско-Петроградская линия), Озерки (Московско-Петроградская линия)

EXAMPLE2
     # Pragmas.
     use strict;
     use warnings;

     # Modules.
     use Map::Tube::SaintPetersburg;

     # Object.
     my $obj = Map::Tube::SaintPetersburg->new;

     # Get XML file.
     my $xml_file = $obj->xml;

     # Print out XML file.
     print "XML file: $xml_file\n";

     # Output like:
     # XML file: .*/saint_petersburg-map.xml

DEPENDENCIES
    File::Share, Map::Tube, Moo, namespace::clean.

SEE ALSO
    Map::Tube, Map::Tube::Graph, Map::Tube::GraphViz,
    Map::Tube::Text::Table, Task::Map::Tube.

    Map::Tube::Barcelona, Map::Tube::Berlin, Map::Tube::Bucharest,
    Map::Tube::Budapest, Map::Tube::Delhi, Map::Tube::Dnipropetrovsk,
    Map::Tube::Kazan, Map::Tube::Kharkiv, Map::Tube::Kiev,
    Map::Tube::London, Map::Tube::Minsk, Map::Tube::Moscow, Map::Tube::NYC,
    Map::Tube::Nanjing, Map::Tube::Novosibirsk, Map::Tube::Prague,
    Map::Tube::Samara, Map::Tube::Sofia, Map::Tube::Tbilisi,
    Map::Tube::Tokyo, Map::Tube::Vienna, Map::Tube::Warsaw,
    Map::Tube::Yekaterinburg.

REPOSITORY
    <https://github.com/tupinek/Map-Tube-SaintPetersburg>

AUTHOR
    Michal Špaček <mailto:skim@cpan.org>

    <http://skim.cz>

LICENSE AND COPYRIGHT
     © 2014-2015 Michal Špaček
     Artistic License
     BSD 2-Clause License

VERSION
    0.03

